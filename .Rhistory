loan_amount_term
)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_a_t = loan_amount + loan_amount_term)
df_overview4['loan_amount_term']
typeof('loan_amount_term')
is.numeric('l')
df_overview4['loan_amount_term']
typeof('loan_amount_term')
is.numeric('loan_amount_term')
df_overview4['loan_amount_term']
typeof('loan_amount_term')
df_overviw4['loan_amount_term'] = is.numeric('loan_amount_term')
df_overview4['loan_amount_term']
typeof('loan_amount_term')
df_overview4['loan_amount_term'] = is.numeric('loan_amount_term')
df_overview4['loan_amount_term']
#typeof('loan_amount_term')
df_overview4['loan_amount_term'] = is.numeric('loan_amount_term')
typeof('loan_amount_term')
df_overview4['loan_amount_term']
#typeof('loan_amount_term')
df_overview4['loan_amount_term'] = is.numeric(df_overview4['loan_amount_term'])
typeof('loan_amount_term')
df_overview4['loan_amount_term']
#typeof('loan_amount_term')
df_overview4['loan_amount_term'] = is.numeric(df_overview4['loan_amount_term'])
typeof('loan_amount_term')
df_overview4['loan_amount_term']
#typeof('loan_amount_term')
df_overview5['loan_amount_term'] = is.numeric(df_overview4['loan_amount_term'])
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
as.numeric(df_overview4['loan_amount_term'])
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
as.numeric('loan_amount_term')
typeof('loan_amount_term')
df_overview4['loan_amount_term']
#typeof('loan_amount_term')
df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.numeric(unlist('loan_amount_term'))
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.numeric(unlist('loan_amount_term'))
x_num
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.numeric(unlist('loan_amount_term'))
view(x_num)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.numeric(unlist('loan_amount_term'))
class(x_num)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.numeric(unlist('loan_amount_term'))
class(x_num)
length(x_num)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.numeric(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_a_t = loan_amount + loan_amount_term)
view(df_overview4_mut)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
#dropping columns
df_overview4 <- df_overview3[-c(1,2)]
view(df_overview4)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_a_t = loan_amount + loan_amount_term)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
y_num <- as.double(unlist(df_overview4['loan_amount']))
class(y_num)
length(y_num)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = loan_amount + loan_amount_term)
#dropping columns
df_overview4 <- df_overview3[-c(1,2)]
view(df_overview4)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
y_num <- as.double(unlist(df_overview4['loan_amount']))
class(y_num)
length(y_num)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = loan_amount + loan_amount_term)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = x_num + y_num)
view(df_overview4_mut)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = ((x_num + y_num)/367)
view(df_overview4_mut)
#what does it look like when we combine the avg. loan term and loan abount
df_overview4 <- select(df_overview4,
loan_amount,
loan_amount_term
)
view(df_overview4)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = ((x_num + y_num)/367)
view(df_overview4_mut)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = ((x_num + y_num)/367)
view(df_overview4_mut)
#dropping columns
df_overview4 <- df_overview3[-c(1,2)]
view(df_overview4)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
y_num <- as.double(unlist(df_overview4['loan_amount']))
class(y_num)
length(y_num)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = ((x_num + y_num)/367)
view(df_overview4_mut)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = (x_num + y_num)/367)
view(df_overview4_mut)
mean(x_num)
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term'].mean))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(stringr)
df_overview <- read_csv('~/Documents/GitHub/tableau_Fri_project/loan_shark.csv')
df_overview
tibble_overview <- as_tibble(df_overview)
View(df_overview)
#cleaning column names
rename_cols <- function(df_overview) {
#retrieve the column names using names(x)
names(df_overview) <- names(df_overview) %>% str_replace_all('\\.', '')%>% tolower()
return(df_overview)
}
df_overview <- rename_cols(df_overview)
view(df_overview)
#adding '_' to some column names
colnames(df_overview)[1] ="num"
colnames(df_overview)[8] ="applicant_income"
colnames(df_overview)[9] ="co_applicant_income"
colnames(df_overview)[10] ="loan_amount"
view(df_overview)
# dropping column
df_overview2 = select(df_overview, -1,-7)
#df_overview2 = select(df_overview, -)
view(df_overview2)
#converting to CSV file for further cleaning in Python
write.csv(df_overview2,file='loandata_version2.csv',na='')
df_overview3 <- read_csv('~/Documents/GitHub/Capstone1_Data_Insights_for_Loan_DEI/new_clean_loan.csv')
df_overview3
#dropping columns
df_overview4 <- df_overview3[-c(1,2)]
view(df_overview4)
write.csv(df_overview4,file='loandata_finalversion.csv')
#df_overview4['loan_amount_term']
#typeof('loan_amount_term')
#df_overview4['loan_amount_term'] = as.numeric(df_overview4['loan_amount_term'])
#typeof('loan_amount_term')
x_num <- as.double(unlist(df_overview4['loan_amount_term']))
class(x_num)
length(x_num)
y_num <- as.double(unlist(df_overview4['loan_amount']))
class(y_num)
length(y_num)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = (x_num + y_num)/367)
#drop the old columns
df_overview5_mut <- df_overview4_mut[-c(1,2)]
view(df_overview5_mut)
#applying a mutation to the dataset:
df_overview4_mut <- mutate(df_overview4,
loan_time_amount = (x_num + y_num)/367)
view(df_overview4_mut)
sum(x_num)
sum(x_num)
x_num
w <- sum(x_num)
w
t.test(df_overview4$gender, df_overview4$loan_amount)
ggplot(df_overview4) +
geom_point(aes(x = gender, y = loan_amount)) +
labs(title = "Comparison of gender and loan_amount", x = "Gender", y = "Loan_amount")
t.test(df_overview4$gender, df_overview4$loan_amount)
t.test(df_overview4[gender], df_overview4[loan_amount])
t.test(df_overview4['gender'], df_overview4['loan_amount'])
#perform a t-test
t.test(cod$user_compound_score, cod$critic_compound_score)
t.test(df_overview4['loan_term'], df_overview4['loan_amount'])
t.test(df_overview4['applicant_income'], df_overview4['loan_amount'])
t.test(df_overview4['gender'], df_overview4['loan_amount'])
t.test(df_overview4['gender'], df_overview4['loan_amount'])
as.numeric('gender')
as.numeric('gender')
typeof('gender')
as.integer(as.logical(df_overview4e$column.gender))
as.integer(as.logical(df_overview4$column.gender))
typeof('gender')
t.test(df_overview4['gender'], df_overview4['loan_amount'])
df5 = as.integer(as.logical(df_overview4$column.gender))
typeof('gender')
df_overview4$gender <- as.integer(as.logical(df_overview4$gender))
typeof('gender')
df5 <- df_overview4$gender <- as.integer(as.logical(df_overview4$gender))
typeof('gender')
df5 <- as.integer(as.logical(df_overview4$gender))
typeof('gender')
df5 <- as.integer(as.logical(df_overview4$gender))
typeof('gender')
df5 <- as.logical(df_overview4$gender)
typeof('gender')
df_overview4$gender <- as.logical(df_overview4$gender)
typeof('gender')
df5 <- df_overview4$gender <- as.logical(df_overview4$gender)
typeof(df5)
t.test(df_overview4['gender'], df_overview4['loan_amount'])
df5 <- df_overview4$gender <- as.logical(df_overview4$gender)
typeof(df5)
View(df5)
df5 <- as.integer(as.logical(df_overview4$gender))
typeof(df5)
df5 <- as.integer(as.logical(df_overview4$gender))
typeof(df5)
view(df5)
df5 <- as.logical(df_overview4$gender)
typeof(df5)
view(df5)
ggplot(df_overview4) +
geom_point(aes(x = gender, y = loan_amount)) +
labs(title = "Comparison of gender and loan_amount", x = "Gender", y = "Loan_amount")
ggplot(df_overview4) +
geom_point(aes(x = gender, y = loan_amount)) +
labs(title = "Comparison of gender and loan_amount", x = "Gender", y = "Loan_amount")
df_overview3 <- read_csv('~/Documents/GitHub/Capstone1_Data_Insights_for_Loan_DEI/new_clean_loan.csv')
df_overview3
#dropping columns
df_overview4 <- df_overview3[-c(1,2)]
view(df_overview4)
ggplot(df_overview4) +
geom_point(aes(x = gender, y = loan_amount)) +
labs(title = "Comparison of gender and loan_amount", x = "Gender", y = "Loan_amount")
ggplot(df_overview4) +
geom_point(aes(x = gender, y = loan_amount)) +
labs(title = "Comparison of gender and loan_amount", x = "Gender", y = "Loan_amount")
df5 <- as.logical(df_overview4$gender)
typeof(df5)
view(df5)
t.test(df_overview4['gender'], df_overview4['loan_amount'])
df5 <- as.numeric(df_overview4$gender)
typeof(df5)
view(df5)
df_overview3 <- read_csv('~/Documents/GitHub/Capstone1_Data_Insights_for_Loan_DEI/new_clean_loan.csv')
df_overview3
#dropping columns
df_overview4 <- df_overview3[-c(1,2)]
view(df_overview4)
ggplot(df_overview4) +
geom_point(aes(x = gender, y = loan_amount)) +
labs(title = "Comparison of gender and loan_amount", x = "Gender", y = "Loan_amount")
df5 <- as.numeric(df_overview4$gender)
typeof(df5)
view(df5)
t.test(df_overview4['gender'], df_overview4['loan_amount'])
female <- 1
male <- 2
unknown <- 0
gender <- c('female', 'male', 'unknown')
# Roll numbers
nums <-0:2
# df name of data frame
# Converting the list into dataframe
df5<-df_overview4(gender,nums)
gender <- c('female', 'male', 'unknown')
# Roll numbers
nums <-0:2
# df name of data frame
# Converting the list into dataframe
df5<-data.frame(gender,nums)
print(df5)
gender <- c('female', 'male', 'unknown')
# Roll numbers
nums <-0:2
# df name of data frame
# Converting the list into dataframe
df5 <- df_overview4$gender<-data.frame(gender,nums)
gender <- c('female', 'male', 'unknown')
# Roll numbers
nums <-1:367
nassign <- c(1,2,0)
# df name of data frame
# Converting the list into dataframe
df5 <- df_overview4$gender<-data.frame(gender,nums, nassign)
gender1=df_overview4[['gender']]
print(gender1)
gender <- c('female', 'male', 'unknown')
# Roll numbers
nums <-1:367
nassign <- c(1,2,0)
# df name of data frame
# Converting the list into dataframe
df5 <- df_overview4$gender<-data.frame(gender,nums, nassign)
gender1=df_overview4[['gender']]
print(gender1)
t.test(df_overview4['gender'], df_overview4['loan_amount'])
gender1 %>%
mutate(female = 1, male = 2, unknown = 0)
as.numeric(gender1)
gender1 %>%
mutate(female = 1, male = 2, unknown = 0)
as.numeric(gender1['female'])
as.numeric(gender1['female'] = 1)
as.numeric(gender1['female']) = 1
as.numeric(gender1['female']) <- 1
as.numeric(gender1['female']) <- 1
as.numeric(gender1== 'female') <- 1
as.numeric(gender1 = 'female') <- 1
as.numeric(gender1 c('female')) <- 1
gender1 <- as.numeric(gender1 c('female', 1))
is.wholenumber <-
function(x, tol = .Machine$double.eps^0.5)  abs(x - round(x)) < tol
is.wholenumber(1) # is TRUE
(x <- seq(1, 5, by = 0.5) )
is.wholenumber( x ) #-->  TRUE FALSE TRUE ...
t.test(df_overview4['gender'], df_overview4['loan_amount'])
#applying a mutation to the dataset:
df5_mut <- mutate(df_overview4,
gender= male == 1y,
#applying a mutation to the dataset:
df5_mut <- mutate(df_overview4,
gender= male == 1,
gender = female ==2,
gender, unknown == 0)
view(df5_mut)
#applying a mutation to the dataset:
df5_mut <- mutate(gender1,
male == 1,
female ==2,
unknown == 0)
df_overview4 <- filter(gender, female == 1 & male == 2 & unknown == 0)
df_overview4 <- filter(gender1, female == 1 & male == 2 & unknown == 0)
gender1 <- filter(gender1, female == 1 & male == 2 & unknown == 0)
ggplot(df_overview4) +
geom_point(aes(x = dependents, y = loan_amount)) +
labs(title = "Comparison of dependents and loan_amount", x = "dependents", y = "Loan_amount")
t.test(df_overview4['dependents'], df_overview4['loan_amount'])
df1 <- read_csv('~/Documents/GitHub/tableau_Fri_project/loan_shark.csv')
df
t.test(df_overview4['gender'], df_overview4['loan_amount'])
df1 <- read_csv('~/Documents/GitHub/tableau_Fri_project/loan_shark.csv')
df1
t.test(df_overview4['gender'], df_overview4['loan_amount'])
library(tidyverse)
library(dplyr)
cod_reviews <- read.csv("Call of Duty Reviews.csv")
cod_reviews
tibble_cod <- as_tibble(cod_reviews)
tibble_cod
#or could just view and create an extra window
view(tibble_cod)
#write a function to rename these columns
rename_cols <- function(x) {
#retrieve the column names using names(x)
names(x) <- names(x) %>% str_replace_all('\\.', '_')%>% tolower()
return(x)
}
#x is just the name of the parameter
my_new_tibble <- rename_cols(tibble_cod)
view(my_new_tibble)
#check for missing values
sum(is.na(my_new_tibble))
my_new_tibble <- my_new_tibble %>%
drop_na()
view(my_new_tibble)
sum(is.na(my_new_tibble)) #R is not reconizing empty strings as null values
#filter data to remove rows with empty strings in the platform column
my_new_tibble <- my_new_tibble %>%
filter(platform != "")
view(my_new_tibble)
#mutate a new column
cod <- my_new_tibble %>%
mutate(my_new_tibble, avg_score = (critic_compound_score + user_compound_score) / 2)
view(cod)
#Histogram of user ratings
ggplot(cod) +
geom_histogram(binwidth = .1, aes(x = user_compound_score), fill = 'blue', color = 'black')
#find the mean of the column I give it after the dollar sign
#mean(cod$user_compound_score)
#save it to a variable
average_u_r <- mean(cod$user_compound_score)
ggplot(cod) +
geom_histogram(binwidth = .1, aes(x = user_compound_score), fill = 'blue', color = 'black')
+
geom_vline(xintercept = average_u_r, color + 'white', linetype = 'dashed') + labs(title = 'distribution of user ratings', x = 'user rating', y = 'frequency')
#perform a t-test
t.test(cod$user_compound_score, cod$critic_compound_score)
